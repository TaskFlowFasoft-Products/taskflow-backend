name: run_tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run_unit_tests:
    runs-on: ubuntu-latest

    env:
      PYTHON_VERSION: '3.12'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          
          if [ -f pyproject.toml ]; then
            echo "Detected pyproject.toml → installing via Poetry"
            python -m pip install poetry
            poetry config virtualenvs.create false
            poetry config installer.parallel false
            poetry config repositories.pypi https://pypi.org/simple/
            poetry install --no-root
          
          elif [ -f requirements.txt ]; then
            echo "Detected requirements.txt → installing via pip"
            pip install -r requirements.txt
          
          else
            echo "::error::Nenhum arquivo de dependências encontrado (pyproject.toml ou requirements.txt)."
            exit 1
          fi

      - name: Set up locale
        run: |
          sudo apt-get update
          sudo apt-get install -y locales
          sudo locale-gen pt_BR.UTF-8
          sudo update-locale LANG=pt_BR.UTF-8

      - name: Check Python version
        run: python --version

      - name: Run unit tests
        run: |
          pip install pytest-asyncio
          pip install httpx
          pytest --maxfail=3 --disable-warnings -rs